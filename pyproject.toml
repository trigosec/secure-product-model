[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "secure-product-model-scripts"
version = "0.1.0"
description = "Python utilities for Secure Product Model Hugo site"
requires-python = ">=3.10"

dependencies = [
    "pydantic>=2.0",
    "pyyaml>=6.0",
    "jinja2>=3.0",
    "requests>=2.25.0",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["scripts*"]
exclude = ["data*", "website*", "docs*", "tests*"]

[project.optional-dependencies]
dev = [
    "black>=23.0",
    "mypy>=1.0",
    "pyright>=1.1.350",
    "pytest>=7.0",
    "ruff>=0.1.0",
]

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pyright]
include = ["scripts"]
exclude = ["**/__pycache__", "**/.pytest_cache", "**/node_modules"]
venvPath = "."
venv = ".venv"
pythonVersion = "3.10"
pythonPlatform = "Linux"
typeCheckingMode = "basic"
useLibraryCodeForTypes = true

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
